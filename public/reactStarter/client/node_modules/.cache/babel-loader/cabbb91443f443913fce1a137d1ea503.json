{"ast":null,"code":"import { GET_SOMETHING_FROM_GET_REQUEST } from \"./types\";\nimport { POST_SOMETHING_TO_POST_REQUEST } from \"./types\"; //ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\n\nimport { typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484 } from \"./types\";\nimport { typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654 } from \"./types\";\nimport { typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201 } from \"./types\";\nimport { typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239 } from \"./types\";\nimport { typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187 } from \"./types\"; //END_OF_ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\n\nimport axios from \"axios\";\nexport const getFromGETRequest = () => async dispatch => {\n  const res = await axios.get(\"http://127.0.0.1:7860/\");\n  dispatch({\n    type: GET_SOMETHING_FROM_GET_REQUEST,\n    payload: res.data\n  });\n};\nexport const postToPOSTRequest = valueReceived => async dispatch => {\n  const res = await axios.post(\"http://127.0.0.1:7860/setData\", {\n    dataToPostNodeJs: valueReceived\n  });\n  dispatch({\n    type: POST_SOMETHING_TO_POST_REQUEST,\n    payload: res.data\n  });\n}; //ADD_NEW_ACTIONS_FROM_HERE\n\nexport const actionFunctionFor_GetCovidStatesGetCovidStates_Request1 = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');\n  myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');\n  var raw = '';\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch('https://covid-193.p.rapidapi.com/statistics?country=USA', requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCovidStatesGetCovidStates_Request1,\n      payload: result\n    });\n  }).catch(error => console.log('error', error));\n};\nexport const actionFunctionFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654 = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');\n  myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');\n  var raw = '';\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch('https://covid-193.p.rapidapi.com/countries', requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654,\n      payload: result\n    });\n  }).catch(error => console.log('error', error));\n};\nexport const actionFunctionFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484 = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');\n  myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');\n  var raw = '';\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch('https://covid-193.p.rapidapi.com/countries', requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484,\n      payload: result\n    });\n  }).catch(error => console.log('error', error));\n};\nexport const actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239 = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');\n  myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');\n  var raw = '';\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch('https://covid-193.p.rapidapi.com/history?country=india', requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239,\n      payload: result\n    });\n  }).catch(error => console.log('error', error));\n};\nexport const actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201 = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');\n  myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');\n  var raw = '';\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch('https://covid-193.p.rapidapi.com/history?country=india', requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201,\n      payload: result\n    });\n  }).catch(error => console.log('error', error));\n};\nexport const actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187 = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');\n  myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');\n  var raw = '';\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch('https://covid-193.p.rapidapi.com/history?country=india', requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187,\n      payload: result\n    });\n  }).catch(error => console.log('error', error));\n}; //END_OF_ADD_NEW_ACTIONS_FROM_HERE","map":{"version":3,"sources":["D:/dreamproject/AppGenerator/public/reactStarter/client/src/actions/allActions.js"],"names":["GET_SOMETHING_FROM_GET_REQUEST","POST_SOMETHING_TO_POST_REQUEST","typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484","typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654","typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201","typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239","typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187","axios","getFromGETRequest","dispatch","res","get","type","payload","data","postToPOSTRequest","valueReceived","post","dataToPostNodeJs","actionFunctionFor_GetCovidStatesGetCovidStates_Request1","valueGot","myHeaders","Headers","append","raw","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","console","log","typeFor_GetCovidStatesGetCovidStates_Request1","catch","error","actionFunctionFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654","actionFunctionFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484","actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239","actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201","actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187"],"mappings":"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","sourcesContent":["import { GET_SOMETHING_FROM_GET_REQUEST } from \"./types\";\r\nimport { POST_SOMETHING_TO_POST_REQUEST } from \"./types\";\r\n//ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\r\n\r\nimport { typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484 } from \"./types\";\r\nimport { typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654 } from \"./types\";\r\nimport { typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201 } from \"./types\";\r\nimport { typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239 } from \"./types\";\r\nimport { typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187 } from \"./types\";\r\n//END_OF_ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\r\nimport axios from \"axios\";\r\n\r\nexport const getFromGETRequest = () => async (dispatch) => {\r\n  const res = await axios.get(\"http://127.0.0.1:7860/\");\r\n  dispatch({\r\n    type: GET_SOMETHING_FROM_GET_REQUEST,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const postToPOSTRequest = (valueReceived) => async (dispatch) => {\r\n  const res = await axios.post(\"http://127.0.0.1:7860/setData\", {\r\n    dataToPostNodeJs: valueReceived,\r\n  });\r\n  dispatch({\r\n    type: POST_SOMETHING_TO_POST_REQUEST,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n//ADD_NEW_ACTIONS_FROM_HERE\r\n\r\nexport const actionFunctionFor_GetCovidStatesGetCovidStates_Request1 = (valueGot) => async (dispatch) => {var myHeaders = new Headers();myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');var raw = '';var requestOptions = {   method: 'GET',   headers: myHeaders,   body: raw,   redirect: 'follow'};fetch('https://covid-193.p.rapidapi.com/statistics?country=USA', requestOptions)   .then(response => response.json())   .then(result => console.log(result)).then((result) => {dispatch({type: typeFor_GetCovidStatesGetCovidStates_Request1,payload: result,});})   .catch(error => console.log('error', error));};\r\nexport const actionFunctionFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654 = (valueGot) => async (dispatch) => {var myHeaders = new Headers();myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');var raw = '';var requestOptions = {   method: 'GET',   headers: myHeaders,   body: raw,   redirect: 'follow'};fetch('https://covid-193.p.rapidapi.com/countries', requestOptions)   .then(response => response.json())   .then(result => console.log(result)).then((result) => {dispatch({type: typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_899654,payload: result,});})   .catch(error => console.log('error', error));};\r\nexport const actionFunctionFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484 = (valueGot) => async (dispatch) => {var myHeaders = new Headers();myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');var raw = '';var requestOptions = {   method: 'GET',   headers: myHeaders,   body: raw,   redirect: 'follow'};fetch('https://covid-193.p.rapidapi.com/countries', requestOptions)   .then(response => response.json())   .then(result => console.log(result)).then((result) => {dispatch({type: typeFor_GetCountriesForCovidGetCountriesForCovid_NoRequestStateVariable_121484,payload: result,});})   .catch(error => console.log('error', error));};\r\nexport const actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239 = (valueGot) => async (dispatch) => {var myHeaders = new Headers();myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');var raw = '';var requestOptions = {   method: 'GET',   headers: myHeaders,   body: raw,   redirect: 'follow'};fetch('https://covid-193.p.rapidapi.com/history?country=india', requestOptions)   .then(response => response.json())   .then(result => console.log(result)).then((result) => {dispatch({type: typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_174239,payload: result,});})   .catch(error => console.log('error', error));};\r\nexport const actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201 = (valueGot) => async (dispatch) => {var myHeaders = new Headers();myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');var raw = '';var requestOptions = {   method: 'GET',   headers: myHeaders,   body: raw,   redirect: 'follow'};fetch('https://covid-193.p.rapidapi.com/history?country=india', requestOptions)   .then(response => response.json())   .then(result => console.log(result)).then((result) => {dispatch({type: typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_772201,payload: result,});})   .catch(error => console.log('error', error));};\r\nexport const actionFunctionFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187 = (valueGot) => async (dispatch) => {var myHeaders = new Headers();myHeaders.append('x-rapidapi-host', 'covid-193.p.rapidapi.com');myHeaders.append('x-rapidapi-key', 'dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d');var raw = '';var requestOptions = {   method: 'GET',   headers: myHeaders,   body: raw,   redirect: 'follow'};fetch('https://covid-193.p.rapidapi.com/history?country=india', requestOptions)   .then(response => response.json())   .then(result => console.log(result)).then((result) => {dispatch({type: typeFor_GetCountryHistoryGetCountryHistory_NoRequestStateVariable_861187,payload: result,});})   .catch(error => console.log('error', error));};\r\n//END_OF_ADD_NEW_ACTIONS_FROM_HERE\r\n"]},"metadata":{},"sourceType":"module"}