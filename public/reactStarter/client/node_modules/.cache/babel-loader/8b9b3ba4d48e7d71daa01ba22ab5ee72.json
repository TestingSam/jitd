{"ast":null,"code":"import { GET_SOMETHING_FROM_GET_REQUEST } from \"./types\";\nimport { POST_SOMETHING_TO_POST_REQUEST } from \"./types\"; //ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\n\nimport { typeFor_GetCovidStates } from \"./types\";\nimport { typeFor_GetLatestNews } from \"./types\";\nimport { typeFor_GetCountriesForCovid } from \"./types\";\nimport { typeFor_GetCountryHistory } from \"./types\"; //END_OF_ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\n\nimport axios from \"axios\";\nexport const getFromGETRequest = () => async dispatch => {\n  const res = await axios.get(\"http://127.0.0.1:7860/\");\n  dispatch({\n    type: GET_SOMETHING_FROM_GET_REQUEST,\n    payload: res.data\n  });\n};\nexport const postToPOSTRequest = valueReceived => async dispatch => {\n  const res = await axios.post(\"http://127.0.0.1:7860/setData\", {\n    dataToPostNodeJs: valueReceived\n  });\n  dispatch({\n    type: POST_SOMETHING_TO_POST_REQUEST,\n    payload: res.data\n  });\n}; //ADD_NEW_ACTIONS_FROM_HERE\n\nexport const actionFunctionFor_GetCovidStates = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"x-rapidapi-host\", \"covid-193.p.rapidapi.com\");\n  myHeaders.append(\"x-rapidapi-key\", \"dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d\");\n  var raw = \"\";\n  var requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  var response = await fetch(\"https://covid-193.p.rapidapi.com/statistics?country=USA\", requestOptions).then(response => response.json()).then(result => {\n    return result;\n  }).catch(error => console.log(\"error\", error));\n  dispatch({\n    type: typeFor_GetCovidStates,\n    payload: result\n  });\n};\nexport const actionFunctionFor_GetLatestNews = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    type: \"filterArticles\",\n    queryString: \"title:Covid19\"\n  });\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  fetch(\"https://api.newsfilter.io/public/actions?token=sti4ioroeaeiu972366rsyolszgdzxzvirhkg02jqjhelbinp9oisdfbafoauowe\", requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetLatestNews,\n      payload: result\n    });\n  }).catch(error => console.log(\"error\", error));\n};\nexport const actionFunctionFor_GetCountriesForCovid = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"x-rapidapi-host\", \"covid-193.p.rapidapi.com\");\n  myHeaders.append(\"x-rapidapi-key\", \"dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d\");\n  var raw = \"\";\n  var requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  fetch(\"https://covid-193.p.rapidapi.com/countries\", requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCountriesForCovid,\n      payload: result\n    });\n  }).catch(error => console.log(\"error\", error));\n};\nexport const actionFunctionFor_GetCountryHistory = valueGot => async dispatch => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"x-rapidapi-host\", \"covid-193.p.rapidapi.com\");\n  myHeaders.append(\"x-rapidapi-key\", \"dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d\");\n  var raw = \"\";\n  var requestOptions = {\n    method: \"GET\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  };\n  fetch(\"https://covid-193.p.rapidapi.com/history?country=india\", requestOptions).then(response => response.json()).then(result => console.log(result)).then(result => {\n    dispatch({\n      type: typeFor_GetCountryHistory,\n      payload: result\n    });\n  }).catch(error => console.log(\"error\", error));\n}; //END_OF_ADD_NEW_ACTIONS_FROM_HERE","map":{"version":3,"sources":["D:/dreamproject/AppGenerator/public/reactStarter/client/src/actions/allActions.js"],"names":["GET_SOMETHING_FROM_GET_REQUEST","POST_SOMETHING_TO_POST_REQUEST","typeFor_GetCovidStates","typeFor_GetLatestNews","typeFor_GetCountriesForCovid","typeFor_GetCountryHistory","axios","getFromGETRequest","dispatch","res","get","type","payload","data","postToPOSTRequest","valueReceived","post","dataToPostNodeJs","actionFunctionFor_GetCovidStates","valueGot","myHeaders","Headers","append","raw","requestOptions","method","headers","body","redirect","response","fetch","then","json","result","catch","error","console","log","actionFunctionFor_GetLatestNews","JSON","stringify","queryString","actionFunctionFor_GetCountriesForCovid","actionFunctionFor_GetCountryHistory"],"mappings":"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","sourcesContent":["import { GET_SOMETHING_FROM_GET_REQUEST } from \"./types\";\r\nimport { POST_SOMETHING_TO_POST_REQUEST } from \"./types\";\r\n//ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\r\n\r\nimport { typeFor_GetCovidStates } from \"./types\";\r\nimport { typeFor_GetLatestNews } from \"./types\";\r\nimport { typeFor_GetCountriesForCovid } from \"./types\";\r\nimport { typeFor_GetCountryHistory } from \"./types\";\r\n//END_OF_ADD_NEW_IMPORTS_FOR_ACTIONS_FROM_HERE\r\nimport axios from \"axios\";\r\n\r\nexport const getFromGETRequest = () => async (dispatch) => {\r\n  const res = await axios.get(\"http://127.0.0.1:7860/\");\r\n  dispatch({\r\n    type: GET_SOMETHING_FROM_GET_REQUEST,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const postToPOSTRequest = (valueReceived) => async (dispatch) => {\r\n  const res = await axios.post(\"http://127.0.0.1:7860/setData\", {\r\n    dataToPostNodeJs: valueReceived,\r\n  });\r\n  dispatch({\r\n    type: POST_SOMETHING_TO_POST_REQUEST,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n//ADD_NEW_ACTIONS_FROM_HERE\r\n\r\nexport const actionFunctionFor_GetCovidStates = (valueGot) => async (\r\n  dispatch\r\n) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"x-rapidapi-host\", \"covid-193.p.rapidapi.com\");\r\n  myHeaders.append(\r\n    \"x-rapidapi-key\",\r\n    \"dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d\"\r\n  );\r\n  var raw = \"\";\r\n  var requestOptions = {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: \"follow\",\r\n  };\r\n  var response = await fetch(\r\n    \"https://covid-193.p.rapidapi.com/statistics?country=USA\",\r\n    requestOptions\r\n  )\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n  dispatch({ type: typeFor_GetCovidStates, payload: result });\r\n};\r\nexport const actionFunctionFor_GetLatestNews = (valueGot) => async (\r\n  dispatch\r\n) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  var raw = JSON.stringify({\r\n    type: \"filterArticles\",\r\n    queryString: \"title:Covid19\",\r\n  });\r\n  var requestOptions = {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: \"follow\",\r\n  };\r\n  fetch(\r\n    \"https://api.newsfilter.io/public/actions?token=sti4ioroeaeiu972366rsyolszgdzxzvirhkg02jqjhelbinp9oisdfbafoauowe\",\r\n    requestOptions\r\n  )\r\n    .then((response) => response.json())\r\n    .then((result) => console.log(result))\r\n    .then((result) => {\r\n      dispatch({ type: typeFor_GetLatestNews, payload: result });\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\nexport const actionFunctionFor_GetCountriesForCovid = (valueGot) => async (\r\n  dispatch\r\n) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"x-rapidapi-host\", \"covid-193.p.rapidapi.com\");\r\n  myHeaders.append(\r\n    \"x-rapidapi-key\",\r\n    \"dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d\"\r\n  );\r\n  var raw = \"\";\r\n  var requestOptions = {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: \"follow\",\r\n  };\r\n  fetch(\"https://covid-193.p.rapidapi.com/countries\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((result) => console.log(result))\r\n    .then((result) => {\r\n      dispatch({ type: typeFor_GetCountriesForCovid, payload: result });\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\nexport const actionFunctionFor_GetCountryHistory = (valueGot) => async (\r\n  dispatch\r\n) => {\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"x-rapidapi-host\", \"covid-193.p.rapidapi.com\");\r\n  myHeaders.append(\r\n    \"x-rapidapi-key\",\r\n    \"dd44d0a755msh52836eccd71549bp127125jsn8a184ed28c8d\"\r\n  );\r\n  var raw = \"\";\r\n  var requestOptions = {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: \"follow\",\r\n  };\r\n  fetch(\r\n    \"https://covid-193.p.rapidapi.com/history?country=india\",\r\n    requestOptions\r\n  )\r\n    .then((response) => response.json())\r\n    .then((result) => console.log(result))\r\n    .then((result) => {\r\n      dispatch({ type: typeFor_GetCountryHistory, payload: result });\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n};\r\n//END_OF_ADD_NEW_ACTIONS_FROM_HERE\r\n"]},"metadata":{},"sourceType":"module"}