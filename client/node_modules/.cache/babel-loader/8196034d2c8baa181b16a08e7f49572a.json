{"ast":null,"code":"var _jsxFileName = \"D:\\\\dreamproject\\\\AppGenerator\\\\client\\\\src\\\\GetCollection.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"./GetCollection.css\";\nimport axios from \"axios\";\nimport { TestFunction } from \"./actions/allActions\";\nimport JITHeader from \"./JITHeader\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nclass GetCollection extends Component {\n  componentDidMount() {\n    this.props.TestFunction();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      });\n    };\n\n    this.onOpenModal = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n      data.append(\"file\", this.state.selectedFile);\n      axios.post(\"http://127.0.0.1:5000/upload\", data, {// receive two    parameter endpoint url ,form data\n      }).then(res => {\n        // then print response status\n        console.log(res);\n        this.setState({\n          apiData: res.data\n        });\n      });\n    };\n\n    this.state = {\n      schema: \"Mine\",\n      open: false,\n      selectedFile: null,\n      apiData: [],\n      selectRowProp: {\n        mode: \"radio\",\n        clickToSelect: true,\n        style: {\n          background: \"green\"\n        },\n        onSelect: (row, isSelect, rowIndex, e) => {\n          console.log(row);\n          this.onOpenModal;\n        }\n      },\n      columns: [{\n        dataField: \"apiType\",\n        text: \"API TYPE\"\n      }, {\n        dataField: \"apiName\",\n        text: \"API NAME\"\n      }, {\n        dataField: \"apiUrl\",\n        text: \"API URL\"\n      }]\n    };\n  }\n\n  render() {\n    const {\n      testData\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(JITHeader, {\n      subHeading: \"Get Apis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      action: \"#\",\n      id: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"Upload Your Postman Collection File \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      class: \"form-control\",\n      onChange: this.onChangeHandler,\n      multiple: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Upload\")), /*#__PURE__*/React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: this.state.apiData,\n      columns: this.state.columns,\n      selectRow: this.state.selectRowProp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onOpenModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Open modal\"), /*#__PURE__*/React.createElement(Modal, {\n      open: this.state.open,\n      onClose: this.onCloseModal,\n      center: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"Simple centered modal\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  testData: state.dataFromReducer.TestDataInAllReducers\n});\n\nexport default connect(mapStateToProps, {\n  TestFunction\n})(GetCollection);","map":{"version":3,"sources":["D:/dreamproject/AppGenerator/client/src/GetCollection.js"],"names":["React","Component","connect","BootstrapTable","axios","TestFunction","JITHeader","Modal","GetCollection","componentDidMount","props","constructor","onChangeHandler","event","setState","selectedFile","target","files","loaded","onOpenModal","open","onCloseModal","onClickHandler","data","FormData","append","state","post","then","res","console","log","apiData","schema","selectRowProp","mode","clickToSelect","style","background","onSelect","row","isSelect","rowIndex","e","columns","dataField","text","render","testData","mapStateToProps","dataFromReducer","TestDataInAllReducers"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"./GetCollection.css\";\r\nimport axios from \"axios\";\r\nimport { TestFunction } from \"./actions/allActions\";\r\nimport JITHeader from \"./JITHeader\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\n\r\nclass GetCollection extends Component {\r\n  componentDidMount() {\r\n    this.props.TestFunction();\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      schema: \"Mine\",\r\n      open: false,\r\n      selectedFile: null,\r\n      apiData: [],\r\n      selectRowProp: {\r\n        mode: \"radio\",\r\n        clickToSelect: true,\r\n        style: { background: \"green\" },\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n          console.log(row);\r\n          this.onOpenModal;\r\n        },\r\n      },\r\n      columns: [\r\n        {\r\n          dataField: \"apiType\",\r\n          text: \"API TYPE\",\r\n        },\r\n        {\r\n          dataField: \"apiName\",\r\n          text: \"API NAME\",\r\n        },\r\n        {\r\n          dataField: \"apiUrl\",\r\n          text: \"API URL\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  onChangeHandler = (event) => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0,\r\n    });\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onClickHandler = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", this.state.selectedFile);\r\n    axios\r\n      .post(\"http://127.0.0.1:5000/upload\", data, {\r\n        // receive two    parameter endpoint url ,form data\r\n      })\r\n      .then((res) => {\r\n        // then print response status\r\n        console.log(res);\r\n        this.setState({\r\n          apiData: res.data,\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    const { testData } = this.props;\r\n    return (\r\n      <div>\r\n        <JITHeader subHeading=\"Get Apis\" />\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3\"></div>\r\n            <div class=\"col-md-6\">\r\n              <form method=\"post\" action=\"#\" id=\"#\">\r\n                <div class=\"form-group files\">\r\n                  <label>Upload Your Postman Collection File </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    class=\"form-control\"\r\n                    onChange={this.onChangeHandler}\r\n                    multiple=\"\"\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-success btn-block\"\r\n              onClick={this.onClickHandler}\r\n            >\r\n              Upload\r\n            </button>\r\n          </div>\r\n          <BootstrapTable\r\n            keyField=\"id\"\r\n            data={this.state.apiData}\r\n            columns={this.state.columns}\r\n            selectRow={this.state.selectRowProp}\r\n          />\r\n          <div>\r\n            <button onClick={this.onOpenModal}>Open modal</button>\r\n            <Modal open={this.state.open} onClose={this.onCloseModal} center>\r\n              <h2>Simple centered modal</h2>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  testData: state.dataFromReducer.TestDataInAllReducers,\r\n});\r\n\r\nexport default connect(mapStateToProps, { TestFunction })(GetCollection);\r\n"]},"metadata":{},"sourceType":"module"}