"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var React = __importStar(require("react"));
var lodash_1 = __importDefault(require("lodash"));
var RjvArray_1 = __importDefault(require("./RjvArray"));
var RjvObject_1 = __importDefault(require("./RjvObject"));
var Arrow_1 = __importDefault(require("./Arrow"));
var ui_1 = require("./ui");
var Rjv = /** @class */ (function (_super) {
    __extends(Rjv, _super);
    function Rjv() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isExpanded: true
        };
        _this.handleExpand = function () {
            _this.setState({
                isExpanded: true
            });
        };
        _this.handleClose = function () {
            _this.setState({
                isExpanded: false
            });
        };
        _this.getKeyName = function () {
            return _this.props.keyName || 'Root';
        };
        _this.shouldExpandNode = function () {
            var _a = _this.props, shouldExpandNode = _a.shouldExpandNode, data = _a.data;
            var ifNeedExpand = _this.getIfNendExpand();
            var currentPath = _this.getCurrentPath();
            if (shouldExpandNode && ifNeedExpand) {
                return shouldExpandNode(currentPath, data);
            }
            return true;
        };
        _this.getCurrentPath = function () {
            var _a = _this.props, path = _a.path, keyName = _a.keyName;
            var currentPath = path || [];
            if (keyName) {
                currentPath = currentPath.concat([keyName]);
            }
            return currentPath;
        };
        _this.handleArrowClick = function () {
            var isExpanded = _this.state.isExpanded;
            var onArrowClick = _this.props.onArrowClick;
            var currentPath = _this.getCurrentPath();
            _this.setState({ isExpanded: !isExpanded }, function () {
                if (onArrowClick) {
                    onArrowClick(currentPath, _this.state.isExpanded);
                }
            });
        };
        _this.getPassedProps = function () {
            var passedProps = lodash_1["default"].pick(_this.props, [
                'shouldExpandNode',
                'onArrowClick',
                'labelRenderer',
                'valueRenderer',
                'typeRenderer',
                'arrowStyle',
                'expandAll',
                'closeAll'
            ]);
            return passedProps;
        };
        _this.renderValueByType = function () {
            var _a = _this.props, data = _a.data, valueRenderer = _a.valueRenderer, typeRenderer = _a.typeRenderer;
            var currentPath = _this.getCurrentPath();
            var passedProps = _this.getPassedProps();
            var $value = null;
            var $type = null;
            var type = null;
            if (lodash_1["default"].isString(data)) {
                type = 'string';
                $value = React.createElement(ui_1.StringSpan, null,
                    "\"",
                    data,
                    "\"");
            }
            if (lodash_1["default"].isBoolean(data)) {
                type = 'boolean';
                $value = React.createElement(ui_1.BooleanSpan, null, String(data));
            }
            if (lodash_1["default"].isNumber(data)) {
                type = 'number';
                $value = React.createElement(ui_1.NumberSpan, null, data);
            }
            if (lodash_1["default"].isNull(data)) {
                type = 'null';
                $value = React.createElement(ui_1.NullSpan, null, "null");
            }
            if (lodash_1["default"].isObject(data)) {
                type = 'object';
                $value = React.createElement(RjvObject_1["default"], __assign({ data: data, path: currentPath }, passedProps));
                $type = (React.createElement(ui_1.ObjectTypeSpan, null, "{} " + Object.keys(data).length + " keys"));
            }
            if (lodash_1["default"].isArray(data)) {
                type = 'array';
                $value = React.createElement(RjvArray_1["default"], __assign({ data: data, path: currentPath }, passedProps));
                $type = React.createElement(ui_1.ArrayTypeSpan, null, "[] " + data.length + " items");
            }
            // custom value render
            if (type !== 'object' && type !== 'array' && valueRenderer) {
                $value = valueRenderer(data);
            }
            // custom type render
            if ((type === 'object' || type === 'array') && typeRenderer) {
                $type = typeRenderer(data);
            }
            return {
                $type: $type,
                $value: $value
            };
        };
        _this.getIfNendExpand = function () {
            var data = _this.props.data;
            return lodash_1["default"].isArray(data) || lodash_1["default"].isObject(data);
        };
        return _this;
    }
    Rjv.prototype.componentDidMount = function () {
        var _a = this.props, expandAll = _a.expandAll, closeAll = _a.closeAll, keyName = _a.keyName;
        var isExpanded = this.shouldExpandNode();
        var ifNeedExpand = this.getIfNendExpand();
        var _keyName = this.getKeyName();
        this.setState({
            isExpanded: isExpanded
        });
        if (ifNeedExpand) {
            expandAll && expandAll(_keyName, this.handleExpand);
            closeAll && closeAll(_keyName, this.handleClose);
        }
    };
    Rjv.prototype.render = function () {
        var isExpanded = this.state.isExpanded;
        var _a = this.props, hideRoot = _a.hideRoot, labelRenderer = _a.labelRenderer, _b = _a.arrowStyle, arrowStyle = _b === void 0 ? {} : _b;
        var _keyName = this.getKeyName();
        var ifNeedExpand = this.getIfNendExpand();
        // arrow
        var $arrow = (React.createElement(Arrow_1["default"], { isExpanded: isExpanded, ifShow: ifNeedExpand, onClick: this.handleArrowClick, style: arrowStyle }));
        // key
        var $key = React.createElement(ui_1.KeySpan, null,
            _keyName,
            ": ");
        // custom key
        if (labelRenderer) {
            $key = labelRenderer(_keyName);
        }
        // value
        var _c = this.renderValueByType(), $type = _c.$type, $value = _c.$value;
        if (hideRoot && _keyName === 'Root') {
            return $value;
        }
        return (React.createElement(ui_1.Row, null,
            React.createElement(ui_1.Col, null, $arrow),
            React.createElement(ui_1.Col, null,
                $key,
                $type,
                ifNeedExpand && !isExpanded ? null : $value)));
    };
    return Rjv;
}(React.Component));
exports["default"] = Rjv;
